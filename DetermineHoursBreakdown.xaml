<Activity mc:Ignorable="sap sap2010" x:Class="DetermineHoursBreakdown" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_sErrorEmailToCC" Type="InArgument(x:String)" />
    <x:Property Name="in_sErrorEmailTo" Type="InArgument(x:String)" />
    <x:Property Name="in_sClientName" Type="InArgument(x:String)" />
    <x:Property Name="in_sInvoicePeriod" Type="InArgument(x:String)" />
    <x:Property Name="in_sInvoiceFolder" Type="InArgument(x:String)" />
    <x:Property Name="in_sTimeTrackerFile" Type="InArgument(x:String)" />
    <x:Property Name="in_sInvoiceDate" Type="InArgument(x:String)" />
  </x:Members>
  <this:DetermineHoursBreakdown.in_sErrorEmailToCC>
    <InArgument x:TypeArguments="x:String" />
  </this:DetermineHoursBreakdown.in_sErrorEmailToCC>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1202.4,5500.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DetermineHoursBreakdown_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Task Desc: Determines the client IA1 hours breakdown for the Billing period. The breakdown will be saved in an Excel file- which will be attached to the Invoice email in a later step. &#xA;&#xA;*This client is billed bi-weekly, and the total hours of each week are under &quot;Week_Total&quot; columns. Hence, we will need to determine these two columns- which will always come after the Billing Start Date." DisplayName="DetermineHoursBreakdown" sap:VirtualizedContainerService.HintSize="973.6,5436" sap2010:WorkflowViewState.IdRef="Sequence_13">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Breakdown" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Reading Tracker Data" sap:VirtualizedContainerService.HintSize="932,561.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="430.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Reading Breakdown data from tracker file.&quot;]" />
      <ui:ReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="For the Breakdown tab, the Header row in the file will not be read as a header. This is because, the range in file has multiple occurrences of the phrase &quot;Week_Total&quot; in the Header row." DataTable="[dt_Breakdown]" DisplayName="Reading Breakdown Data From Tracker" sap:VirtualizedContainerService.HintSize="430.4,164" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="IA1_Breakdown" WorkbookPath="[in_sTimeTrackerFile]">
        <ui:ReadRange.Range>
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String" Value="" />
          </InArgument>
        </ui:ReadRange.Range>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ReadRange>
      <ui:MultipleAssign DisplayName="Renaming  the First Two Columns" sap:VirtualizedContainerService.HintSize="430.4,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[dt_Breakdown.Columns(0).ColumnName]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">Client</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[dt_Breakdown.Columns(1).ColumnName]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">Portal</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
    </Sequence>
    <Sequence DisplayName="Determining Breakdown Hours" sap:VirtualizedContainerService.HintSize="932,2621.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Default="1" Name="intWeek" />
        <Variable x:TypeArguments="x:Boolean" Default="False" Name="bIsBillingPeriod" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="890.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Determining Breakdown Hours.&quot;]" />
      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Because the Header row in the file was not read as a header, the relevant columns need to be determined; this will be done from the first row in the table, which now contain the headers." DisplayName="Determining the Columns Corresponding to the two &quot;Week_Total&quot; Columns after the Billing Start Date" sap:VirtualizedContainerService.HintSize="890.4,1113.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[dt_Breakdown.Columns]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="col" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="855.2,944.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Default="[in_sInvoicePeriod.Split(&quot;-&quot;c)(0).Trim]" Name="sInvStartDate" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[bIsBillingPeriod = False AndAlso dt_Breakdown.Rows(0).Item(col.ToString).ToString.Contains(sInvStartDate.Replace(&quot;.&quot;, &quot;/&quot;))]" DisplayName="Checking if the Column Fields are within the Billing Period" sap:VirtualizedContainerService.HintSize="813.6,248.8" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[bIsBillingPeriod]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <If Condition="[bIsBillingPeriod AndAlso dt_Breakdown.Rows(0).Item(col.ToString).ToString = &quot;Week_Total&quot;]" DisplayName="Determining the First Two &quot;Week_Total&quot; Columns, in the Billing Period" sap:VirtualizedContainerService.HintSize="813.6,563.2" sap2010:WorkflowViewState.IdRef="If_3">
                <If.Then>
                  <If Condition="[intWeek = 1]" DisplayName="If in Billing Period..." sap:VirtualizedContainerService.HintSize="778.4,374.4" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <ui:MultipleAssign DisplayName="Week_Total Column 1" sap:VirtualizedContainerService.HintSize="430.4,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[dt_Breakdown.Columns(col.ToString).ColumnName]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">Week1</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:Int32">[intWeek]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:Int32">[intWeek + 1]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                      </ui:MultipleAssign>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Week_Total Column 2" sap:VirtualizedContainerService.HintSize="304,215.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[dt_Breakdown.Columns(col.ToString).ColumnName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Week2</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Break sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="Break_1" />
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Then>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="890.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Trace" Message="[&quot;Filtering Hours Breakdown datatable.&quot;]" />
      <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keeping only the Client, Portal, Week1, and Week2 column fields." DataTable="[dt_Breakdown]" DisplayName="Filter Data Table - Breakdown" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="890.4,193.6" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_Breakdown]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTEQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Client"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["Client"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTEQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Client"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["Total"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <InArgument x:TypeArguments="x:String">["Client"]</InArgument>
            <InArgument x:TypeArguments="x:String">["Portal"]</InArgument>
            <InArgument x:TypeArguments="x:String">["Week1"]</InArgument>
            <InArgument x:TypeArguments="x:String">["Week2"]</InArgument>
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FilterDataTable>
      <Sequence DisplayName="Calculating the Total Hours for each Line Item" sap:VirtualizedContainerService.HintSize="890.4,629.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Trace" Message="[&quot;Calculating the Total Hours for each Line Item.&quot;]" />
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Total_Hours" DataTable="[dt_Breakdown]" DisplayName="Adding &quot;Total_Hours&quot; Column to hold the Total" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_Breakdown]" DisplayName="Calculating the Total Hours" sap:VirtualizedContainerService.HintSize="433.6,176" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
              </ActivityAction.Argument>
              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("Total_Hours")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[CDbl(CurrentRow.Item("Week1")) + CDbl(CurrentRow.Item("Week2"))]</InArgument>
                </Assign.Value>
              </Assign>
            </ActivityAction>
          </ui:ForEachRow.Body>
        </ui:ForEachRow>
      </Sequence>
      <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keeping only those line items with total hours &gt; 0;&#xA;Discarding the Weeks Columns." DataTable="[dt_Breakdown]" DisplayName="Filter Data Table - Breakdown" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="890.4,206.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dt_Breakdown]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="GT">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Total_Hours"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <InArgument x:TypeArguments="x:String">["Client"]</InArgument>
            <InArgument x:TypeArguments="x:String">["Portal"]</InArgument>
            <InArgument x:TypeArguments="x:String">["Total_Hours"]</InArgument>
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FilterDataTable>
    </Sequence>
    <Sequence DisplayName="Saving Breakdown Data" sap:VirtualizedContainerService.HintSize="932,1988" sap2010:WorkflowViewState.IdRef="Sequence_12">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="sScriptResult" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="752.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Saving data to file.&quot;]" />
      <If Condition="[File.Exists(in_sInvoiceFolder + &quot;\&quot; + Year(CDate(in_sInvoiceDate)).ToString + &quot;\&quot; + in_sClientName + &quot; Hours Breakdown_&quot; + in_sInvoicePeriod + &quot;.xlsx&quot;)]" DisplayName="Checking if there's an Existing Copy" sap:VirtualizedContainerService.HintSize="752.8,495.2" sap2010:WorkflowViewState.IdRef="If_4">
        <If.Then>
          <Sequence DisplayName="If so, Deleting it" sap:VirtualizedContainerService.HintSize="475.2,306.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[in_sInvoiceFolder + &quot;\&quot; + Year(CDate(in_sInvoiceDate)).ToString + &quot;\&quot; + in_sClientName + &quot; Hours Breakdown_&quot; + in_sInvoicePeriod + &quot;.xlsx&quot;]" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;An existing copy was found and deleted.&quot;]" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Writing Data to Excel file" sap:VirtualizedContainerService.HintSize="752.8,197.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_sInvoiceFolder + &quot;\&quot; + Year(CDate(in_sInvoiceDate)).ToString + &quot;\&quot; + in_sClientName + &quot; Hours Breakdown_&quot; + in_sInvoicePeriod + &quot;.xlsx&quot;]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt_Breakdown]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet1" StartingCell="A1" />
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
      </ui:ExcelApplicationScope>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="752.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Running Script to format the saved breakdown data.&quot;]" />
      <ui:InvokeVBScript KillOnTimeout="{x:Null}" RunInBatchMode="{x:Null}" TimeoutMS="{x:Null}" UnicodeSupport="{x:Null}" sap2010:Annotation.AnnotationText="-Adding Subtotals to the Breakdown data&#xA;-Formatting the Font and Background properties" DisplayName="Running Script to Format the Saved Data" FileName="InvoiceGeneration_IA1_FormatHoursBreakdown.vbs" sap:VirtualizedContainerService.HintSize="752.8,152.8" sap2010:WorkflowViewState.IdRef="InvokeVBScript_1" Result="[sScriptResult]" WaitForOutput="True">
        <ui:InvokeVBScript.Arguments>
          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
            <InArgument x:TypeArguments="x:String">["""" + in_sInvoiceFolder + "\" + Year(CDate(in_sInvoiceDate)).ToString + "\" + in_sClientName + " Hours Breakdown_" + in_sInvoicePeriod + ".xlsx" + """"]</InArgument>
          </scg:List>
        </ui:InvokeVBScript.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeVBScript>
      <If Condition="[sScriptResult.ToLower().Contains(&quot;success&quot;)]" DisplayName="Checking If the Script was Successful" sap:VirtualizedContainerService.HintSize="752.8,664" sap2010:WorkflowViewState.IdRef="If_5">
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[&quot;Script successful.&quot;]" />
        </If.Then>
        <If.Else>
          <Sequence DisplayName="If failed..." sap:VirtualizedContainerService.HintSize="375.2,504.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Logging Error Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Fatal" Message="[&quot;Script InvoiceGeneration_IA1_FormatHoursBreakdown.vbs failed.&quot; + Environment.NewLine + &quot;Script Result: &quot; + sScriptResult]" />
            <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hello,&quot; + Environment.NewLine + Environment.NewLine + &quot;Script InvoiceGeneration_IA1_FormatHoursBreakdown.vbs failed.&quot; + Environment.NewLine + Environment.NewLine + &quot;Script Result: &quot; + sScriptResult + Environment.NewLine + Environment.NewLine + Environment.NewLine + &quot;Thanks.&quot;]" Cc="[in_sErrorEmailToCC]" DisplayName="Notifying User" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" Importance="High" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="Script Failed" To="[in_sErrorEmailTo]">
              <ui:SendOutlookMail.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </ui:SendOutlookMail.Files>
            </ui:SendOutlookMail>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="[&quot;User notified of error.&quot;]" />
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
  </Sequence>
</Activity>